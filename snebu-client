#!/bin/bash
main()
{
    defaults
    process_cmdline $@
    defaults_post
    $target "${@}"
}
defaults()
{
    configfile=/etc/snebu-client.conf
    SNEBU=snebu
    FIND=find
    FILE_PATTERN="%y\t%#m\t%D\t%i\t%u\t%U\t%g\t%G\t%s\t0\t%T@\t%p\0"
    LINK_PATTERN="%y\t%#m\t%D\t%i\t%u\t%U\t%g\t%G\t%s\t0\t%T@\t%p\0%l\0"
    servername=$(hostname)
    

}
defaults_post()
{
    if [ ${target} = "listbackups" ]
    then
	if [ "${servername}" = "all" ]
	then
	    unset servername
	fi
    fi
    if [ ${target} = "do_backup" ]
    then
	datestamp=$(date +%s)
	DAY_OF_WEEK=$(date -d @${datestamp} +%u)
	DAY_OF_MONTH=$(date -d @${datestamp} +%d)
	if [ -z "${retention}" ]
	then
	    if [ ${DAY_OF_MONTH}  = "1" ]
	    then
		retention="monthly"
	    elif [ ${DAY_OF_WEEK}  = "6" ]
	    then
		retention="weekly"
	    else
		retention="daily"
	    fi
	fi
	if [ -n "${filelist[@]}" ]
	then
	    INCLUDE=( "${filelist[@]}" )
	fi
    fi
    if [ -z "${INCLUDE[@]}" ]
    then
	INCLUDE=( $(mount |egrep "ext[234]|btrfs" |awk '{print $3}') )
    fi
    if [ -z "${EXCLUDE[@]}" ]
    then
	EXCLUDE=( /tmp /var/tmp /mnt /media )
    fi

}
process_cmdline()
{
    if [ "$1" == "backup" ]
    then
	target=do_backup
	shift
    elif [ "$1" == "restore" ]
    then
	target=do_restore
	shift
    elif [ "$1" == "listbackups" ]
    then
	target=listbackups
	shift
    else
	usage
	exit
    fi

    if ! args=$(getopt -l "config:,name:,retention:,date:,force-full,directory:,help:" -o "c:n:r:d:fC:h" -- "$@")
    then
	usage target
	exit 1
    fi
## Look for config file argument first
    eval set -- "$args"
    while [ -n "$1" ]
    do
	case $1 in
	    -c|--config) configfile=$2; shift; shift; break;;
	    -n|--name) shift; shift;;
	    -r|--retention) shift; shift;;
	    -d|--date) shift; shift;;
	    -f|--force-full) shift;;
	    -C|--directory) shift; shift;;
	    -h|--help) shift;;
	    --) shift; break;;
	esac
    done

    [ -f "$configfile" ] && . $configfile
    eval set -- "$args"
    while [ -n "$1" ]
    do
	case $1 in
	    -n|--name) servername=$2; shift; shift;;
	    -r|--retention) retention=$2; shift; shift;;
	    -d|--date) datestamp=$2; shift; shift;;
	    -f|--force-full) force_full=1; shift;;
	    -C|--directory) tgtdirectory=$2; shift; shift;;
	    -h|--help) shift; usage $target;;
	    --) shift; break;;
	esac
    done
    filelist=( ${@} )
}
usage()
{
    cat <<-EOT
	Usage:
	snebu-client
	    backup  -n backupname -d datestamp -r retention_schedule

	    restore -n backupname -d datestamp [ files... ]

	    listbackups [ -n backupname [ -d datestamp ] ]
	EOT
}

listbackups()
{
    args=""
    [ -n "${servername}" ] && args="${args} -n ${servername}"
    [ -n "${datestamp}" ] && args="${args} -d ${datestamp}"
    echo "$SNEBU listbackups${args}"
    $SNEBU listbackups${args} ${filelist[@]}
}

FINDCMD() {
    # Printf's used in find commandline
    FILE_PATTERN="%y\t%#m\t%D\t%i\t%u\t%U\t%g\t%G\t%s\t0\t%T@\t%p\0"
    LINK_PATTERN="%y\t%#m\t%D\t%i\t%u\t%U\t%g\t%G\t%s\t0\t%T@\t%p\0%l\0"

    # Build Find exclude commands from exclude list
    for i in ${EXCLUDE[@]}
    do
	findexclude[$((j * 4 + 1))]="-path"
	findexclude[$((j * 4 + 2))]="$i"
	findexclude[$((j * 4 + 3))]="-prune"
	findexclude[$((j * 4 + 4))]="-o"
	((j++))
    done
    find ${INCLUDE[@]} -xdev "${findexclude[@]}" \( -type f -o -type d \) \
    -printf "${FILE_PATTERN}" -o -type l -printf "${LINK_PATTERN}"
}

do_backup()
{
    # Create list of files and metadata to backup, send to Snebu, and
    # store received file list in tmp file.
    FINDCMD |$SNEBU newbackup --name ${servername} --retention ${retention} \
	--datestamp ${datestamp} --null --null-output \
	>/tmp/backup_include.${datestamp}

    # Now create a tar file and send it to Snebu
    tar -P --null -T /tmp/backup_include.${datestamp} -cf - |\
	$SNEBU submitfiles --name ${servername} --datestamp ${datestamp}

#    rm -f /tmp/backup_include.${datestamp}
}

do_restore()
{
    if [ -z "${servername} -o -z "${datestamp} ]
    then
	cat <<-EOT
	Please specify backup name and datestamp you wish to restore:
	    snebu-client -n servername -d datestamp [ files ...]
	Use "listbackups" to get a list of available backup sessions
	EOT
	exit
    fi
    if [ -n "${tgtdirectory}" ]
    then
	tgtd=( -C $tgtdirectory )
    fi
    $SNEBU restore --name ${servername} --datestamp ${datestamp} ${filelist[@]} |tar ${tgtd[@]} -xvf -
}

main $@
